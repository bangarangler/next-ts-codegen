type Todo {
  _id: ID!
  userId: String!
  name: String!
}

type TodoRes {
  errors: [InputError]
  error: GeneralError
  todo: Todo
}

type TodosRes {
  error: GeneralError
  todos: [Todo]
}

input AddTodoInput {
  name: String!
  userId: String!
}

input EditTodoInput {
  name: String!
  userId: String!
  todoId: String!
}

type TodoSubscriptionRes {
  todo: Todo
  error: GeneralError
}

type Query {
  todo(todoId: String!): TodoRes!
  todos: TodosRes!
}

type Mutation {
  addTodo(options: AddTodoInput!): TodoRes!
  editTodo(options: EditTodoInput!): TodoRes!
  deleteTodo(todoId: String!): Boolean!
}

type Subscription {
  todoAdded: Todo!
  todoUpdated(todoId: String!): TodoSubscriptionRes!
}
